//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Retro_Achievement_Tracker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Retro_Achievement_Tracker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Game Info Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css&quot;&gt;
        ///    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;scripts&quot;&gt;
        ///        function addAchievement(xCoord, yCoord, achievement) {
        ///
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AchievementListWindow {
            get {
                return ResourceManager.GetString("AchievementListWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Notification Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;
        ///    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;
        ///    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Press+Start+2P&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;
        ///    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://ajax.googleapis.com/ajax/libs/jq [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AlertsWindow {
            get {
                return ResourceManager.GetString("AlertsWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chrono_trigger_block {
            get {
                object obj = ResourceManager.GetObject("chrono_trigger_block", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chrono_trigger_block1 {
            get {
                object obj = ResourceManager.GetObject("chrono_trigger_block1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chrono_trigger_block2 {
            get {
                object obj = ResourceManager.GetObject("chrono_trigger_block2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chrono_trigger_block3 {
            get {
                object obj = ResourceManager.GetObject("chrono_trigger_block3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chrono_trigger_block4 {
            get {
                object obj = ResourceManager.GetObject("chrono_trigger_block4", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chrono_trigger_block5 {
            get {
                object obj = ResourceManager.GetObject("chrono_trigger_block5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Focus Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;focus-scripts&quot;&gt;
        ///        /**
        ///                     * textFit v2.3.1
        ///                     * Previously known as jQuery.textFit
        ///                     * 11/2014 by STRML (strml.github.com)
        ///                     * MIT License
        ///                     *
        ///                     * To use: textFit(document.getElement [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FocusWindow {
            get {
                return ResourceManager.GetString("FocusWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Game Info Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;scripts&quot;&gt;/**
        ///         * textFit v2.3.1
        ///         * Previously known as jQuery.textFit
        ///         * 11/2014 by STRML (strml.github.com)
        ///         * MIT License
        ///         *
        ///         * To use: textFit(document.getElementById(&apos;target-div&apos;), options);
        ///         *
        ///         * Will make the *text* content i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GameInfoWindow {
            get {
                return ResourceManager.GetString("GameInfoWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;scripts&quot;&gt;
        ///        /**
        ///                 * textFit v2.3.1
        ///                 * Previously known as jQuery.textFit
        ///                 * 11/2014 by STRML (strml.github.com)
        ///                 * MIT License
        ///                 *
        ///                 * To use: textFit(document.getElementById(&apos;target-div&apos;), options);
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GameStatsWindow {
            get {
                return ResourceManager.GetString("GameStatsWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap green_button {
            get {
                object obj = ResourceManager.GetObject("green_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon image {
            get {
                object obj = ResourceManager.GetObject("image", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap notification_background {
            get {
                object obj = ResourceManager.GetObject("notification_background", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Last Five Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css&quot;&gt;
        ///    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;last-five-scripts&quot;&gt;
        ///        function addAchievement(achievement) {
        ///            v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecentAchievementsWindow {
            get {
                return ResourceManager.GetString("RecentAchievementsWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap red_button {
            get {
                object obj = ResourceManager.GetObject("red_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;scripts&quot;&gt;/**
        ///         * textFit v2.3.1
        ///         * Previously known as jQuery.textFit
        ///         * 11/2014 by STRML (strml.github.com)
        ///         * MIT License
        ///         *
        ///         * To use: textFit(document.getElementById(&apos;target-div&apos;), options);
        ///         *
        ///         * Will make the *text* content inside a containe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserStatsWindow {
            get {
                return ResourceManager.GetString("UserStatsWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap yellow_button {
            get {
                object obj = ResourceManager.GetObject("yellow_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
