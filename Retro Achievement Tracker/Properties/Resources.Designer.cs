//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Retro_Achievement_Tracker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Retro_Achievement_Tracker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Adultery {
            get {
                object obj = ResourceManager.GetObject("Adultery", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Dancarnate_Logo {
            get {
                object obj = ResourceManager.GetObject("Dancarnate_Logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Focus Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;focus-achievement-scripts&quot;&gt;
        ///
        ///        var showPointsBool = false;
        ///
        ///        function adjustFont() {
        ///            var nameValue = 100;
        ///            var descriptionValue = 100;
        ///            var pointsValue = 100;
        ///
        ///            var focusName = document.getElementById(&apos;focus-achievement-name&apos;);
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FocusWindow {
            get {
                return ResourceManager.GetString("FocusWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap game_achievements_image {
            get {
                object obj = ResourceManager.GetObject("game_achievements_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap game_points_image {
            get {
                object obj = ResourceManager.GetObject("game_points_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Game Info Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;ra-stats-scripts&quot;&gt;
        ///        function setFontSize(value) {
        ///            var all = document.getElementsByClassName(&apos;has-font&apos;);
        ///
        ///            setTimeout(function () {
        ///                for (var i = 0; i &lt; all.length; i++) {
        ///                    all[i].style.fontSize = value + &apos;px&apos;;
        ///                }
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GameInfo {
            get {
                return ResourceManager.GetString("GameInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap green_button {
            get {
                object obj = ResourceManager.GetObject("green_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap green_button1 {
            get {
                object obj = ResourceManager.GetObject("green_button1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon hnet_com_image {
            get {
                object obj = ResourceManager.GetObject("hnet_com_image", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Last Five Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;last-five-scripts&quot;&gt;
        ///
        ///        var cycling = false;
        ///
        ///        function adjustFont() {
        ///            var value = 100;
        ///
        ///            var consoleElement = document.getElementById(&quot;focus-achievement-name&quot;);
        ///
        ///            consoleElement.style.fontSize = value + &apos;px&apos;;
        ///
        ///            while (consoleElement. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LastFive {
            get {
                return ResourceManager.GetString("LastFive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap notification_background {
            get {
                object obj = ResourceManager.GetObject("notification_background", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Notification Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;achievement-pop-script&quot;&gt;
        ///
        ///        var achievementAnimationIn = &quot;&quot;;
        ///        var achievementAnimationOut = &quot;&quot;;
        ///
        ///        var masteryAnimationIn = &quot;&quot;;
        ///        var masteryAnimationOut = &quot;&quot;;
        ///
        ///        function adjustAchievementFont() {
        ///            var nameValue = 100;
        ///            var description [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NotificationWindow {
            get {
                return ResourceManager.GetString("NotificationWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap points_image {
            get {
                object obj = ResourceManager.GetObject("points_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap rank_image {
            get {
                object obj = ResourceManager.GetObject("rank_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap red_button {
            get {
                object obj = ResourceManager.GetObject("red_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RSIcon {
            get {
                object obj = ResourceManager.GetObject("RSIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap site_awards_image {
            get {
                object obj = ResourceManager.GetObject("site_awards_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Stats Window&lt;/title&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.5.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///    &lt;script id=&quot;ra-stats-scripts&quot;&gt;
        ///        function setFontSize(value) {
        ///            var all = document.getElementsByClassName(&apos;has-font&apos;);
        ///
        ///            setTimeout(function () {
        ///                for (var i = 0; i &lt; all.length; i++) {
        ///                    all[i].style.fontSize = value + &apos;px&apos;;
        ///                }
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StatsWindow {
            get {
                return ResourceManager.GetString("StatsWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap yellow_button {
            get {
                object obj = ResourceManager.GetObject("yellow_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
